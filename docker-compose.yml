version: '3.8'

networks:
  api:
    driver: bridge

services:
  api:
    # Name of container
    container_name: test_api_container
    hostname: test_api
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - .:/opt/market-guru-test/app
      - /opt/market-guru-test/app/node_modules
    # Run a command against the development stage of the image
    command: npm run start
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - api

  postgres:
    container_name: postgres_container
    hostname: postgres
    image: postgres:15.3-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - /opt/market-guru-test/init-postgres-db:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d marketgurutest" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - api

  pgadmin:
    container_name: pgadmin_container
    hostname: pgadmin_container
    image: dpage/pgadmin4:7.5
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "0000"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 5050:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - api

volumes:
  db-data:
  pgadmin-data:
